1.注解也被称为是元数据，为我们在代码中添加信息提供了一种形式的方法，使我们可以在稍微某个时刻非常方便地是使用

2.与接口的定义一样，注解也会被编译成class文件

3.注解的定义：
    定义注解时需要元注解如@Target和@Retention(保留)；
        @Target：表示注解应用的地方，如某个方法或者是某个域等
        @Retention：用来定义该注解在哪一个级别可用，在源代码(SOURCE)，类文件(CLASS)或者运行时(RUNTIME)。
    注解中一般会包含一些元素表示某些值，类似与接口的方法。但是该元素是可以指定默认值。
    如果注解中没有元素，那么这个注解叫做标记注解。

4.注解的运用场景：
    （1）跟踪项目的中的用例，见UseCase；

5.注解元素：
    所有基本类型
    String
    Class
    enum
    Annotation
    以上所有类型的数组
    //但是，自动打包可以解决不允许使用任何包装类型的限制
    //注解元素的默认值不能是null，通常要表示一个元素不存在一般采用“”或者-1表示

