1.锁：偏向锁，轻量级锁，重量级锁

2.锁的升级过程：当创建一个对象的时候，该对象具有偏向锁性质，当产生竞争的时候就升级到轻量级锁
，如果发生过度竞争时候升级到重量级锁。

3.对象的内存布局：
    markWord：（8个字节）
    class porter:对象在内存中的指针
    instance：类的成员变量
    padding:对齐。如果前面的字段的所占的字节数不是8的倍数，将会补齐为8的倍数

4.偏向锁，都是在一个线程中使用的，只需要在markWord上写上自己的线程id即可，无需惊动操作系统

5.轻量级，在多个线程使用的时候，多个进程发生CAS，竞争到资源的就把线程id写得到markWord，也是一个无需惊动操作系统
的锁（自旋锁）。但是每一个线程都是在while，一直占用着cpu的资源的。

6.在jdk1.6之后添加了自适应自旋锁之后，jdk自动判断轻量级锁是否要升级到重量级锁。此时的线程就会
进入到操作系统的等待队列中。